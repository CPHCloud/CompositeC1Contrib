@using System.Linq
@using System.Text

@using CompositeC1Contrib.Teasers.Configuration
@using CompositeC1Contrib.Teasers.Data
@using CompositeC1Contrib.Teasers.Web.UI

@functions
{
    [FunctionParameter(Label = "Position")]
    public string Position { get; set; }

    private static string GenerateCssClasses(PageTeaserHolder holder)
    {
        var sb = new StringBuilder();
        var additionalInfo = holder.AdditionalInfo;

        sb.Append("teaser");
        sb.AppendFormat(" type-{0}", additionalInfo.InterfaceType.Name.Replace("IPageTeaser", String.Empty).ToLower());
        sb.AppendFormat(" reverse-depth-{0}", additionalInfo.ReverseDepth);

        if (!String.IsNullOrEmpty(holder.Design))
        {
            var designs = TeasersSection.GetSection().Designs.Cast<TeasersDesignElement>();
            var designName = holder.Design;
            var designElement = designs.SingleOrDefault(el => el.Name == designName);

            if (designElement != null)
            {
                sb.Append(" " + designElement.CssClass);
            }
        }

        return sb.ToString();
    }
}

@{
    var pageTeaserHolders = TeaserFacade.PageTeasersForRequest.Where(t => t.Position == Position).ToList();
    if (pageTeaserHolders.Any())
    {
        pageTeaserHolders = pageTeaserHolders.OrderByDescending(o => o.AdditionalInfo.ReverseDepth).ThenBy(o => o.AdditionalInfo.Teaser.LocalOrdering).ToList();

        <div class="teasers">
            @Html.RenderScriptTags()

            @foreach (var pageTeaserHolder in pageTeaserHolders)
            {
                var teaser = pageTeaserHolder.AdditionalInfo.Teaser;
                var typeName = teaser.DataSourceId.InterfaceType.Name;

                @Html.RenderFocusLink(teaser, "Focus")
                @Html.RenderEditLink(teaser, "Edit")

                <div class="@GenerateCssClasses(pageTeaserHolder)">
                    @Function("Teasers.Types." + typeName, new { Teaser = teaser })
                </div>
            }
        </div>
    }
}